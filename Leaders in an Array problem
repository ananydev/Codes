class Solution {
    public ArrayList<Integer> leaders(int n, int arr[])
    {
        ArrayList<Integer> res = new ArrayList<Integer>();
        int maxFromRight = arr[n - 1]; // The rightmost element is always a leader
        res.add(maxFromRight);

        for (int i = n - 2; i >= 0; i--)
        {
            if (arr[i] >= maxFromRight)
            {
                res.add(arr[i]);
                maxFromRight = arr[i];
            }
        }

        // Since we are adding leaders from right to left, we need to reverse the list
        ArrayList<Integer> result = new ArrayList<Integer>();
        for (int i = res.size() - 1; i >= 0; i--) 
        {
            result.add(res.get(i));
        }

        return result;
    }
}
