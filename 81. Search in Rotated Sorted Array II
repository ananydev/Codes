class Solution {
    public boolean search(int[] nums, int target)
     {
         int n=nums.length;
        int l=0;
        int h=n-1;

        while(l<=h)
        {
            int mid=(l+h)/2;

            if(nums[mid]==target)
            {
            return true;
            }

           if (nums[l] == nums[mid] && nums[mid] == nums[h])                          //  [1, 3, 1, 1, 1]
           {
                // If we have duplicates, we shrink the boundaries
                l++;
                h--;
            } 
            
            else if (nums[l] <= nums[mid])
             {
                if (target >= nums[l] && target < nums[mid])
                 {
                    h = mid - 1;
                } 
                else
                {
                    l = mid + 1;
                }
            }
            
           
            else 
            {
                if (target > nums[mid] && target <= nums[h])
                 {
                    l = mid + 1;
                } 
                else 
                {
                    h = mid - 1;
                }
            }
        }
        return false;
        
    }
}
