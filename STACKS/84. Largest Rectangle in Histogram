class Solution
{
    public int largestRectangleArea(int[] heights) 
    {
        Stack<Integer> st = new Stack<>();
        int maxArea = 0;
        int n = heights.length;

        for (int i = 0; i < n; i++) 
        {
            while (!st.isEmpty() && heights[st.peek()] > heights[i])
            {
                int elem = heights[st.pop()];                           
                int nse = i;
                int pse = st.isEmpty() ? -1 : st.peek();
                int area = elem * (nse - pse - 1);
                maxArea = Math.max(maxArea, area);
            }
            st.push(i);
        }

        while (!st.isEmpty()) 
        {
            int elem = heights[st.pop()];
            int nse = n;
            int pse = st.isEmpty() ? -1 : st.peek();
            int area = elem * (nse - pse - 1);
            maxArea = Math.max(maxArea, area);
        }

        return maxArea;
    }
}
