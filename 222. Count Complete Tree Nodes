
class Solution {
    public int countNodes(TreeNode root)
     {
        int leftDepth = leftDepth(root);
        int rightDepth = rightDepth(root);

        if (leftDepth == rightDepth) {
            // If left and right depths are the same, the tree is perfect up to that depth
            return (int) Math.pow(2, leftDepth) - 1;
        } 
        else 
        {
            // If depths are different, recursively count the nodes
            return 1 + countNodes(root.left) + countNodes(root.right);
        }
    }

    private int leftDepth(TreeNode root) {
        int dep = 0;
        while (root != null) {
            root = root.left;
            dep++;
        }
        return dep;
    }

    private int rightDepth(TreeNode root) {
        int dep = 0;
        while (root != null) {
            root = root.right;
            dep++;
        }
        return dep;
    }
}
